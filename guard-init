#!/bin/bash
#
# guardian    GuardianServer Open Source Edition 0.1.1
#
# chkconfig: 345 70 30
# description: guard Server is a smal supervisor scripts for process watchdog handling 
# processname: guard

# Source function library.
. /etc/init.d/functions

RETVAL=0
prog="guard"
LOCKFILE=/var/lock/subsys/$prog
GUARDIAN_DIR=/opt/guardian
GUARDIAN_USER=root
PIDFILE="$GUARDIAN_DIR/guard.pid"
GUARDIAN_OPTS=''


start() {
        echo -n "Starting $prog: "
        daemon --user $GUARDIAN_USER --pidfile="$PIDFILE" $GUARDIAN_DIR/guard $GUARDIAN_OPTS & 
        RETVAL=$?
        [ $RETVAL -eq 0 ] && touch $LOCKFILE
        echo
        return $RETVAL
}

stop() {
        echo -n "Shutting down $prog: "
        killproc $prog && success || failure
        rm -f $PIDFILE
        RETVAL=$?
        [ $RETVAL -eq 0 ] && rm -f $LOCKFILE $PIDFILE
        echo
        return $RETVAL
}

status() {
    printf "%-50s" "Checking $prog..."
    if [ -f $PIDFILE ]; then
        PID=`cat $PIDFILE`
        if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
            printf "%s\n" "Process dead but pidfile exists"
        else
            echo "Running"
        fi
    else
        printf "%s\n" "Service not running"
    fi
    RETVAL=$?
    return $RETVAL
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status
        ;;
    restart)
        stop
        start
        ;;
    *)
        echo "Usage: $prog {start|stop|status|restart}"
        exit 1
        ;;
esac
exit $RETVAL

